"""1-Add posts

Revision ID: 3f602d66965b
Revises:
Create Date: 2025-06-04 21:13:38.929632+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op
from src.config import api_settings

# revision identifiers, used by Alembic.
revision: str = "3f602d66965b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""

    op.create_table(
        "posts",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("category", sa.String(), nullable=False, comment="Категория поста"),
        sa.Column("content", sa.TEXT(), nullable=False, comment="Текст поста"),
        sa.Column(
            "search_vector",
            postgresql.TSVECTOR(),
            nullable=False,
            comment="Вектор для полнотекстового поиска",
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("posts_pkey")),
    )
    op.create_index(op.f("posts_category_idx"), "posts", ["category"], unique=False)
    op.create_index(op.f("posts_created_at_idx"), "posts", ["created_at"], unique=False)
    op.create_index(
        "posts_search_vector_idx",
        "posts",
        ["search_vector"],
        unique=False,
        postgresql_using="gin",
    )

    # Создание функции и триггера для обновления значения
    # поля с вектором на основном языке текста постов при создании
    # записи в таблице posts или обновлении содержимого поля content
    op.execute(
        f"""
        CREATE FUNCTION update_search_vector_in_posts() RETURNS trigger AS $$
        BEGIN
            NEW.search_vector := to_tsvector('{api_settings.POSTS_CONTENT_PRIMARY_LANGUAGE}', NEW.content);
            RETURN NEW;
        END
        $$ LANGUAGE plpgsql;
        """
    )
    op.execute(
        """
        CREATE TRIGGER tsvector_update BEFORE INSERT OR UPDATE OF content
        ON posts
        FOR EACH ROW EXECUTE FUNCTION update_search_vector_in_posts();
        """
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("posts_search_vector_idx", table_name="posts", postgresql_using="gin")
    op.drop_index(op.f("posts_created_at_idx"), table_name="posts")
    op.drop_index(op.f("posts_category_idx"), table_name="posts")
    op.drop_table("posts")
    # ### end Alembic commands ###
